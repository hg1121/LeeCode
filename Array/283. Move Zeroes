283. Move Zeroes

Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        #### by self ####
        if not nums:
            return
        l,r = 0,1
        while l < r <= len(nums) -1:
            if nums[l] == 0:
                if nums[r] != 0:
                    nums[l],nums[r] = nums[r],nums[l]
                    l += 1 
                    r += 1
                else:
                    r += 1
            else:
                l += 1
                r += 1
        
        # zero = 0  # records the position of "0"
        # for i in range(len(nums)):
        #     if nums[i] != 0:
        #         nums[i], nums[zero] = nums[zero], nums[i]
        #         zero += 1
        
       
        ##nums.sort(key=bool, reverse=True)
            