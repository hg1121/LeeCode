509. Fibonacci Number

The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), for N > 1.
Given N, calculate F(N).

 

Example 1:

Input: 2
Output: 1
Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
Example 2:

Input: 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.
Example 3:

Input: 4
Output: 3
Explanation: F(4) = F(3) + F(2) = 2 + 1 = 3.
 

Note:

0 ≤ N ≤ 30.

class Solution(object):
    # global memo
    # memo = {}
    def fib(self, N):
        """
        :type N: int
        :rtype: int
        """
        ####iterable by self####
        if N == 0:
            return 0
        elif N == 1:
            return 1
        turn = 0
        cur, prev = 1,0
        while turn < N:
            cur, prev = cur + prev, cur
            turn += 1
        return prev
        
        ####itrable####
        # if N == 0: return 0
        # memo = [0,1]
        # for _ in range(2,N+1):
        #     memo = [memo[-1], memo[-1] + memo[-2]]
        # return memo[-1]
        
        ####recursive####
#         if N == 0: return 0
#         if N == 1: return 1

#         if N-1 not in memo: memo[N-1] = self.fib(N-1)
#         if N-2 not in memo: memo[N-2] = self.fib(N-2)
            
#         return memo[N-1] + memo[N-2]
       
    