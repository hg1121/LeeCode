169. Majority Element

Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

class Solution(object):
    
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        ####by self
        # nums.sort()
        # dic = {}
        # for num in nums:
        #     if num not in dic.keys():
        #         dic[num] = 1
        #         if dic[num] > len(nums)/2:
        #             return num
        #     else:
        #         dic[num] += 1
        #         if dic[num] > len(nums)/2:
        #             return num
        
        #### one line
        return sorted(nums)[len(nums)/2]
        
        
        #####better than mine
        # dic = {}
        # for num in nums:
        #     dic[num] = dic.get(num, 0) + 1 ##### this is so good 
        #     if dic[num] > len(nums)/2:
        #         return num
                