11. Container With Most Water

Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.

 class Solution:
    def maxArea(self, height: List[int]) -> int:
        ### TLE ###
        # maxarea = 0
        # for i in range(len(height)):
        #     for j in range(i+1,len(height)):
        #         area = min(height[i],height[j]) * (j-i)
        #         if area > maxarea:
        #             maxarea = area
        # return maxarea
        
        # r, l = len(height)-1, 0
        # ans = float('-inf')
        # while r>l:
        #     ans = max(ans, (r-l)*min(height[r], height[l]))
        #     if height[r]>height[l]: # let the lower height move
        #         l = l+1
        #     else:
        #         r = r-1
        # return ans
        
        L, R, width, res = 0, len(height) - 1, len(height) - 1, 0
        for w in range(width, 0, -1):
            if height[L] < height[R]:
                res, L = max(res, height[L] * w), L + 1
            else:
                res, R = max(res, height[R] * w), R - 1
        return res
        