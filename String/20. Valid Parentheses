20. Valid Parentheses

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

class Solution:
    def isValid(self, s: str) -> bool:
        d = {'(':-1, ')':1, '{':-2, '}':2, '[':-3,']':3}
        start = 0
        stop = len(s)
        stack = []
        for index in range(start,stop):
            if d[s[index]] < 0:
                stack.append(d[s[index]])
            else:
                if stack:
                    item = stack.pop()
                    if item + d[s[index]] != 0:
                        return False
                else:
                    return False
        if stack:
            return False

        return True
            